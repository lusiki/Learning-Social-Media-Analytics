original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
library(tidyverse)
library(readxl)
library(xlsx)
library(here)
library(kableExtra)
library(DT)
library(purrr)
library(data.table)
library(tidytext)
library(dplyr)
library(lubridate)
library(anytime)
library(grid)
library(wordcloud)
library(reshape2)
library(ggraph)
library(widyr)
library(topicmodels)
library(ggthemes)
library(xlsx)
library(knitr)
library(kableExtra)
library(stopwords)
original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
stemmed <- readRDS("C:/Users/lukas/Desktop/native_token_stemm.rds")
stemmed <- readRDS("C:/Users/lukas/Dropbox/Članci/Native rad/native_token_stemm.rds")
poveznice <- data.frame(
number = c(1, 2, 3, 4, 5, 6),
text = c(
"Društvene mreže brenda",
"Službena internetska stranica brenda",
"Poveznica nevezana za brend",
"Članak ne sadrži poveznice na kanale brenda / oglašivača",
"Suradnja oglašivača i drugog brenda",
"Više kombinacija"
)
)
# Read In
original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
variables <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/Native.xlsx", sheetIndex = 1)
variables <- variables[,-c(23,24,25)]# %>% drop_na()
original <- original %>% filter(V1 %in% variables$V1)
dta <- merge(original, variables, by = "V1", all.x = TRUE)
dta$DATE <- as.Date(dta$DATE)
stemmed <- readRDS("C:/Users/lukas/Dropbox/Članci/Native rad/native_token_stemm.rds")
stemmed <- stemmed %>%
rename("wordp" = "word") %>%
rename("word" = "transformed_column")
table_data <- dta %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
table_data <- table_data %>%
mutate(
N = replace(N, text == "Članak ne sadrži poveznice na kanale brenda / oglašivača", NA),
percent = replace(percent, text == "Članak ne sadrži poveznice na kanale brenda / oglašivača", NA)
)
table_data
dta
table_data <- dta %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
table_data
View(dta)
dta
dta
View(table_data)
table_data <- table_data %>%
filter(!is.na(N)) %>%
mutate(
N = ifelse(text == "Članak ne sadrži poveznice na kanale brenda / oglašivača", N + sum(is.na(N)), N),
percent = ifelse(text == "Članak ne sadrži poveznice na kanale brenda / oglašivača", percent + sum(is.na(percent)), percent)
)
table_data
table_output <- table_data %>%
select(text, N, percent) %>%
kable(format = "pandoc",
col.names = c("Poveznica", "Broj objava", "%"),
caption = "Pregled poveznica") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
table_output
table_output
table_data <- dta %>%
filter(!is.na()) %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
table_data <- dta %>%
filter(na.omit) %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
table_data <- dta %>%
filter(na.omit()) %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
dta %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N))
table_data <- dta %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
table_data
table_data
table_data <- dta %>%
group_by(POVEZNICE.KANALI) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(poveznice, by = c("POVEZNICE.KANALI" = "number"))
table_data <- na.omit(table_data)
table_output <- table_data %>%
select(text, N, percent) %>%
kable(format = "pandoc",
col.names = c("Poveznica", "Broj objava", "%"),
caption = "Pregled poveznica") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
table_output
table_output
SENTIMENT <- dta %>%
group_by(SENTIMENT) %>%
summarise(N = n()) %>%
mutate(percentSENTIMENT = round(N / sum(N) * 100,2))
sentiment <- data.frame(
number = c(1, 2, 3),
text = c("Pozitivan", "Neutralan", "Negativan")
)
table_data <- dta %>%
group_by(SENTIMENT) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100, 2)) %>%
arrange(desc(N)) %>%
left_join(sentiment, by = c("SENTIMENT" = "number"))
table_output <- table_data %>%
select(text, N, percent) %>%
kable(format = "pandoc",
col.names = c("Sentiment", "Broj objava", "%"),
caption = "Pregled sentimenta") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"), full_width = F)
table_output
ggplot(data = dta, aes(x = factor(SENTIMENT), fill = factor(SENTIMENT))) +
geom_bar() +
labs(
x = "Sentiment",
y = "Broj objava",
title = "Pregled sentimenta"
) +
scale_fill_manual(
values = c("grey10", "grey30", "grey50", "grey70"),
name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")
) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
dta
dta
View(dta)
ggplot(data = dta, aes(x = factor(SENTIMENT), fill = factor(SENTIMENT))) +
geom_bar() +
labs(
x = "Sentiment",
y = "Broj objava",
title = "Pregled sentimenta"
) +
scale_fill_manual(
values = c("grey10", "grey30", "grey50", "grey70"),
name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")
) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
dta <- dta %>%
filter(!is.na(sentiment))
dta <- dta %>%
filter(!is.na(SENTIMENT))
ggplot(data = dta, aes(x = factor(SENTIMENT), fill = factor(SENTIMENT))) +
geom_bar() +
labs(
x = "Sentiment",
y = "Broj objava",
title = "Pregled sentimenta"
) +
scale_fill_manual(
values = c("grey10", "grey30", "grey50", "grey70"),
name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")
) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
industry_list <- data.frame(
id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28),
category = c(
"Financijska industrija",
"Građevinska industrija",
"Moda i ljepota",
"Politička institucija",
"Sportska industrija",
"Zdravlje",
"Obrazovanje i znanost",
"Tehnologija",
"Auto-moto industrija",
"ICT",
"Kultura i umjetnost",
"Turizam, odmor, putovanja, ugostiteljstvo",
"Energetska industrija",
"Prehrambena industrija",
"Industrija bezalkoholnih pića",
"Alkoholna pića",
"Nekretninska industrija",
"Maloprodajna trgovina",
"Igre na sreću",
"Medijske kuće i marketinške, digitalne agencije",
"Namještaj, saloni namještaja, kućanske potrepštine, kućanski uređaji, sredstva za čišćenje",
"Trgovački / shopping centri",
"Glazbena industrija",
"Filmska industrija",
"Brodogradnja",
"Pošta / distribucija pošiljki",
"Komunalne usluge"
)
)
gg1 <- dta %>%
group_by(INDUSTRIJA,SENTIMENT) %>%
summarise(BrojObjava = n()) %>%
left_join(industry_list, by = c("INDUSTRIJA" = "id"))
gg1 <- dta %>%
group_by(INDUSTRIJA,SENTIMENT) %>%
summarise(BrojObjava = n()) %>%
left_join(industry_list, by = c("INDUSTRIJA" = "id"))
gg1$INDUSTRIJA <- gg1$category
gg1 <- gg1 %>% select(-category)
gg1
gg1
ggplot(gg1, aes(x = factor(SENTIMENT), y = BrojObjava, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
facet_wrap(~ INDUSTRIJA, scales = "free_y") +
labs(
x = "Sentiment",
y = "Broj Objava",
title = "Sentimenti po Industrijama"
) +
theme_minimal() +
#  scale_fill_discrete(name = "Sentiment")+
scale_fill_manual(values = c("grey10", "grey30", "grey50", "grey70"), name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")) +  # Assuming two sentiment values; adjust as needed
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(color = "black")
) +
coord_flip()
gg1 %>% filter(INDUSTRIJA == "Zdravlje") %>%
ggplot(., aes(x = factor(SENTIMENT), y = BrojObjava, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
labs(
x = "Sentiment",
y = "Broj Objava",
title = "Sentiment u industriji Zdravlja"
)  +
#  scale_fill_discrete(name = "Sentiment")+
scale_fill_manual(values = c("grey10", "grey30", "grey50", "grey70"), name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
industry_list <- data.frame(
id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28),
category = c(
"Financijska industrija",
"Građevinska industrija",
"Moda i ljepota",
"Politička institucija",
"Sportska industrija",
"Zdravstvena industrija",
"Obrazovanje i znanost",
"Tehnologija",
"Auto-moto industrija",
"ICT",
"Kultura i umjetnost",
"Turizam, odmor, putovanja, ugostiteljstvo",
"Energetska industrija",
"Prehrambena industrija",
"Industrija bezalkoholnih pića",
"Alkoholna pića",
"Nekretninska industrija",
"Maloprodajna trgovina",
"Igre na sreću",
"Medijske kuće i marketinške, digitalne agencije",
"Namještaj, saloni namještaja, kućanske potrepštine, kućanski uređaji, sredstva za čišćenje",
"Trgovački / shopping centri",
"Glazbena industrija",
"Filmska industrija",
"Brodogradnja",
"Pošta / distribucija pošiljki",
"Komunalne usluge"
)
)
gg1 %>% filter(INDUSTRIJA == "Zdravstvena industrija") %>%
ggplot(., aes(x = factor(SENTIMENT), y = BrojObjava, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
labs(
x = "Sentiment",
y = "Broj Objava",
title = "Sentiment u industriji Zdravlja"
)  +
#  scale_fill_discrete(name = "Sentiment")+
scale_fill_manual(values = c("grey10", "grey30", "grey50", "grey70"), name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
gg1 <- dta %>%
group_by(INDUSTRIJA,SENTIMENT) %>%
summarise(BrojObjava = n()) %>%
left_join(industry_list, by = c("INDUSTRIJA" = "id"))
gg1$INDUSTRIJA <- gg1$category
gg1 <- gg1 %>% select(-category)
ggplot(gg1, aes(x = factor(SENTIMENT), y = BrojObjava, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
facet_wrap(~ INDUSTRIJA, scales = "free_y") +
labs(
x = "Sentiment",
y = "Broj Objava",
title = "Sentimenti po Industrijama"
) +
theme_minimal() +
#  scale_fill_discrete(name = "Sentiment")+
scale_fill_manual(values = c("grey10", "grey30", "grey50", "grey70"), name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")) +  # Assuming two sentiment values; adjust as needed
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black"),
strip.background = element_blank(),
strip.text.y = element_text(color = "black")
) +
coord_flip()
gg1 %>% filter(INDUSTRIJA == "Zdravstvena industrija") %>%
ggplot(., aes(x = factor(SENTIMENT), y = BrojObjava, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
labs(
x = "Sentiment",
y = "Broj Objava",
title = "Sentiment u industriji Zdravlja"
)  +
#  scale_fill_discrete(name = "Sentiment")+
scale_fill_manual(values = c("grey10", "grey30", "grey50", "grey70"), name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
data_summary <- gg1 %>%
filter(INDUSTRIJA == "ICT") %>%
group_by(SENTIMENT) %>%
summarise(
BrojObjava = sum(BrojObjava),
PercentTotal = (sum(BrojObjava) / sum(gg1$BrojObjava)) * 100
)
# Create the ggplot
ggplot(data_summary, aes(x = factor(SENTIMENT), y = BrojObjava, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste(BrojObjava, "(", round(PercentTotal, 2), "%)")), vjust = -0.5) + # Add labels
labs(
x = "Sentiment",
y = "Broj Objava",
title = "Sentiment u zdravstvenoj industriji"
) +
scale_fill_manual(
values = c("grey10", "grey30", "grey50", "grey70"),
name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")
) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
# Filter the data for INDUSTRIJA == "ICT"
filtered_data <- gg1 %>%
filter(INDUSTRIJA == "ICT")
# Calculate the number of rows for each SENTIMENT
sentiment_counts <- filtered_data %>%
group_by(SENTIMENT) %>%
summarise(BrojObjava = sum(BrojObjava))
# Calculate the percentage within the ICT category
sentiment_counts <- sentiment_counts %>%
mutate(PercentTotal = (BrojObjava / sum(BrojObjava)) * 100)
# Create the ggplot
ggplot(sentiment_counts, aes(x = factor(SENTIMENT), y = PercentTotal, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(PercentTotal, 2), "%")), vjust = -0.5) + # Add labels
labs(
x = "Sentiment",
y = "Percentage of Total",
title = "Sentiment Distribution within ICT Category"
) +
scale_fill_manual(
values = c("grey10", "grey30", "grey50", "grey70"),
name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")
) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
# Filter the data for INDUSTRIJA == "ICT"
filtered_data <- gg1 %>%
filter(INDUSTRIJA == "Financijska industrija")
# Calculate the number of rows for each SENTIMENT
sentiment_counts <- filtered_data %>%
group_by(SENTIMENT) %>%
summarise(BrojObjava = sum(BrojObjava))
# Calculate the percentage within the ICT category
sentiment_counts <- sentiment_counts %>%
mutate(PercentTotal = (BrojObjava / sum(BrojObjava)) * 100)
# Create the ggplot
ggplot(sentiment_counts, aes(x = factor(SENTIMENT), y = PercentTotal, fill = factor(SENTIMENT))) +
geom_bar(stat = "identity") +
geom_text(aes(label = paste0(round(PercentTotal, 2), "%")), vjust = -0.5) + # Add labels
labs(
x = "Sentiment",
y = "Percentage of Total",
title = "Sentiment Distribution within Financijska industrija Category"
) +
scale_fill_manual(
values = c("grey10", "grey30", "grey50", "grey70"),
name = "Sentiment",
breaks = c("1", "2", "3"),
labels = c("1 = Positive", "2 = Neutral", "3 = Negative")
) +
theme_minimal() +
theme(
axis.text.x = element_text(color = "black"),
axis.text.y = element_text(color = "black"),
axis.title.x = element_text(color = "black"),
axis.title.y = element_text(color = "black"),
plot.title = element_text(color = "black")
)
