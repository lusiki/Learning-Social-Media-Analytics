Percentage = "Percentage",
Cumulative_Percentage = "Cumulative Percentage") %>%
fmt_number(columns = vars(Count, Percentage, Cumulative_Percentage),
decimals = 2) %>%
tab_footnote(footnote = "Source: Your Data Source",
locations = cells_title(groups = "title"))
library(gt)
installed.packages("gt")
library(gt)
eb %>%
group_by(FROM_SITE) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
mutate(Percentage = (Count / sum(Count)) * 100,  # Calculate percentage
Cumulative_Percentage = cumsum(Percentage)) %>%  # Calculate cumulative percentage
head(1000) %>%
mutate_if(is.numeric, format, big.mark = ".") %>%
kable("latex", booktabs = TRUE) %>%  # Use LaTeX for PDF rendering
kable_styling(bootstrap_options = c("striped", "hover"),
latex_options = c("striped", "scale_down")) %>%
column_spec(1, width = "2cm") %>%  # Adjust the width of the first column, for example
footnote(general = "Source: Your Data Source",
general_title = "Note: ",
symbol = "Symbols: **significant at p<0.01; *significant at p<0.05")
library(ggplot2)
library(ggpubr)
install.packages("ggpubr")
library(ggpubr)
# Convert web_summary dataframe to a list of lists
table_data <- split(web_summary, seq(nrow(web_summary)))
# Create the plot
plot <- ggplot() +
geom_table(data = data.frame(x = 1, y = 1), aes(x = x, y = y, label = list(table_data)),
size = 3.5, hjust = 0, vjust = 0) +  # Adjust text size as needed
theme_void() +
theme(plot.margin = margin(20, 20, 20, 20))
print(plot)
# Create the plot
plot <- ggplot() +
geom_table(data = data.frame(x = 1, y = 1), aes(x = x, y = y, label = list(table_data)),
size = 3.5, hjust = 0, vjust = 0) +  # Adjust text size as needed
theme_void() +
theme(plot.margin = margin(20, 20, 20, 20))
library(ggplot2)
library(ggpubr)
# Create the plot
plot <- ggplot() +
geom_table(data = data.frame(x = 1, y = 1), aes(x = x, y = y, label = list(table_data)),
size = 3.5, hjust = 0, vjust = 0) +  # Adjust text size as needed
theme_void() +
theme(plot.margin = margin(20, 20, 20, 20))
table_grob <- tableGrob(web_summary)
library(gridExtra)
table_grob <- tableGrob(web_summary)
png("web_summary_table.png", width = 800, height = 600)
table_grob
web_summary
png("C:/Users/lukas/Desktop/web_summary_table.png", width = 800, height = 600)
web_summary
View(web_summary)
str(web_summary)
web_summary <- web_summary %>%
mutate(Count = as.numeric(gsub("\\.", "", gsub(",", ".", Count))),
Percentage = as.numeric(gsub(",", ".", Percentage)),
Cumulative_Percentage = as.numeric(gsub(",", ".", Cumulative_Percentage))) %>%
mutate(Count = round(Count, 1),
Percentage = round(Percentage, 1),
Cumulative_Percentage = round(Cumulative_Percentage, 1))
View(web_summary)
# Create the table using gt
gt_table <- gt(web_summary) %>%
tab_header(title = "Web Summary") %>%
cols_label(
FROM_SITE = "From Site",
Count = "Count",
Percentage = "Percentage (%)",
Cumulative_Percentage = "Cumulative Percentage (%)"
) %>%
fmt_number(
columns = vars(Count, Percentage, Cumulative_Percentage),
decimals = 1
)
library(gt)
installed.packages("gt")
install.packages("gt")
library(gt)
# Create the table using gt
gt_table <- gt(web_summary) %>%
tab_header(title = "Web Summary") %>%
cols_label(
FROM_SITE = "From Site",
Count = "Count",
Percentage = "Percentage (%)",
Cumulative_Percentage = "Cumulative Percentage (%)"
) %>%
fmt_number(
columns = vars(Count, Percentage, Cumulative_Percentage),
decimals = 1
)
# Display the table, if you're in an R Markdown document or interactive session
print(gt_table)
web_summary <- web %>%
group_by(FROM_SITE) %>%
summarise(Count = n()) %>%
arrange(desc(Count)) %>%
mutate(Percentage = (Count / sum(Count)) * 100,  # Calculate percentage
Cumulative_Percentage = cumsum(Percentage)) %>%  # Calculate cumulative percentage
head(15) %>%
mutate_if(is.numeric, function(x) format(x, big.mark = "."))
web_summary <- web_summary %>%
mutate(Count = as.numeric(gsub("\\.", "", gsub(",", ".", Count))),
Percentage = as.numeric(gsub(",", ".", Percentage)),
Cumulative_Percentage = as.numeric(gsub(",", ".", Cumulative_Percentage))) %>%
mutate(Count = round(Count, 1),
Percentage = round(Percentage, 1),
Cumulative_Percentage = round(Cumulative_Percentage, 1))
# Create the table using gt
gt_table <- gt(web_summary) %>%
tab_header(title = "Web Summary") %>%
cols_label(
FROM_SITE = "From Site",
Count = "Count",
Percentage = "Percentage (%)",
Cumulative_Percentage = "Cumulative Percentage (%)"
) %>%
fmt_number(
columns = vars(Count, Percentage, Cumulative_Percentage),
decimals = 1
)
# Display the table, if you're in an R Markdown document or interactive session
print(gt_table)
# Create the table using gt
gt_table <- gt(web_summary) %>%
tab_header(title = "Najveći hrvatski portali") %>%
cols_label(
FROM_SITE = "Stranica",
Count = "Broj objava",
Percentage = "Udio u ukupnim objavma (%)",
Cumulative_Percentage = "Kumulativni udio (%)"
) %>%
fmt_number(
columns = vars(Count, Percentage, Cumulative_Percentage),
decimals = 1
)
# Display the table, if you're in an R Markdown document or interactive session
print(gt_table)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(xlsx)
library(here)
library(kableExtra)
library(DT)
library(purrr)
library(data.table)
library(tidytext)
library(dplyr)
library(lubridate)
library(anytime)
library(grid)
library(wordcloud)
library(reshape2)
library(ggraph)
library(widyr)
library(topicmodels)
library(ggthemes)
library(xlsx)
library(knitr)
library(kableExtra)
library(stopwords)
original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
variables <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/Native.xlsx", sheetIndex = 1)
variables <- variables[,-c(23,24,25)]# %>% drop_na()
original <- original %>% filter(V1 %in% variables$V1)
dta <- merge(original, variables, by = "V1", all.x = TRUE)
dta$DATE <- as.Date(dta$DATE)
stemmed <- readRDS("C:/Users/Lukas/Dropbox/Mediatoolkit/native_token_stemm.rds")
stemmed <- stemmed %>%
rename("wordp" = "word") %>%
rename("word" = "transformed_column")
knitr::opts_chunk$set(echo = TRUE)
# Read In
original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
library(tidyverse)
library(readxl)
library(xlsx)
library(here)
library(kableExtra)
library(DT)
library(purrr)
library(data.table)
library(tidytext)
library(dplyr)
library(lubridate)
library(anytime)
library(grid)
library(wordcloud)
library(reshape2)
library(ggraph)
library(widyr)
library(topicmodels)
library(ggthemes)
library(xlsx)
library(knitr)
library(kableExtra)
library(stopwords)
# Read In
original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
variables <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/Native.xlsx", sheetIndex = 1)
variables <- variables[,-c(23,24,25)]# %>% drop_na()
original <- original %>% filter(V1 %in% variables$V1)
dta <- merge(original, variables, by = "V1", all.x = TRUE)
dta$DATE <- as.Date(dta$DATE)
stemmed <- readRDS("C:/Users/Lukas/Dropbox/Mediatoolkit/native_token_stemm.rds")
stemmed <- readRDS("C:/Users/lukas/Dropbox/Članci/Native rad/native_token_stemm.rds")
stemmed <- stemmed %>%
rename("wordp" = "word") %>%
rename("word" = "transformed_column")
clickbait <- data.frame(
number = c(1, 2, 3, 4, 5, 6, 7),
text = c("Nedefinirane zamjenice", "Neizvjesnost", "Stil obrnutog narativa",
"Naglašavanje emocija", "Korištenje brojkama", "Više kombinacija",
"Nije clickbait naslov")
)
dta %>%
group_by(CLICKBAIT) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100,2)) %>%
arrange(desc(N)) %>%
left_join(clickbait, by = c("CLICKBAIT" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
group_by(CLICKBAIT) %>%
summarise(N = n()) %>%
mutate(percent = round(N / sum(N) * 100,2)) %>%
arrange(desc(N)) %>%
left_join(clickbait, by = c("CLICKBAIT" = "number"))
knitr::opts_chunk$set(echo = TRUE)
IND_kable
industry_list <- data.frame(
id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28),
category = c(
"Financijska industrija",
"Građevinska industrija",
"Moda i ljepota",
"Politička institucija",
"Sportska industrija",
"Zdravstvena industrija",
"Obrazovanje i znanost",
"Tehnologija",
"Auto-moto industrija",
"ICT industrija",
"Kultura i umjetnost",
"Turizam, odmor, putovanja, ugostiteljstvo",
"Energetska industrija",
"Prehrambena industrija",
"Industrija bezalkoholnih pića",
"Alkoholna pića",
"Industrija nekretnina",
"Maloprodaja",
"Igre na sreću",
"Medijske kuće i marketinške, digitalne agencije",
"Namještaj, saloni namještaja, kućanske potrepštine, kućanski uređaji, sredstva za čišćenje",
"Trgovački / shopping centri",
"Glazbena industrija",
"Filmska industrija",
"Brodogradnja",
"Pošta / distribucija pošiljki",
"Komunalne usluge"
)
)
IND <- dta %>%
group_by(INDUSTRIJA) %>%
summarise(N = n()) %>%
mutate(percentIND = round(N / sum(N) * 100,2))
library(tidyverse)
library(readxl)
library(xlsx)
library(here)
library(kableExtra)
library(DT)
library(purrr)
library(data.table)
library(tidytext)
library(dplyr)
library(lubridate)
library(anytime)
library(grid)
library(wordcloud)
library(reshape2)
library(ggraph)
library(widyr)
library(topicmodels)
library(ggthemes)
library(xlsx)
library(knitr)
library(kableExtra)
library(stopwords)
industry_list <- data.frame(
id = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28),
category = c(
"Financijska industrija",
"Građevinska industrija",
"Moda i ljepota",
"Politička institucija",
"Sportska industrija",
"Zdravstvena industrija",
"Obrazovanje i znanost",
"Tehnologija",
"Auto-moto industrija",
"ICT industrija",
"Kultura i umjetnost",
"Turizam, odmor, putovanja, ugostiteljstvo",
"Energetska industrija",
"Prehrambena industrija",
"Industrija bezalkoholnih pića",
"Alkoholna pića",
"Industrija nekretnina",
"Maloprodaja",
"Igre na sreću",
"Medijske kuće i marketinške, digitalne agencije",
"Namještaj, saloni namještaja, kućanske potrepštine, kućanski uređaji, sredstva za čišćenje",
"Trgovački / shopping centri",
"Glazbena industrija",
"Filmska industrija",
"Brodogradnja",
"Pošta / distribucija pošiljki",
"Komunalne usluge"
)
)
IND <- dta %>%
group_by(INDUSTRIJA) %>%
summarise(N = n()) %>%
mutate(percentIND = round(N / sum(N) * 100,2))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(xlsx)
library(here)
library(kableExtra)
library(DT)
library(purrr)
library(data.table)
library(tidytext)
library(dplyr)
library(lubridate)
library(anytime)
library(grid)
library(wordcloud)
library(reshape2)
library(ggraph)
library(widyr)
library(topicmodels)
library(ggthemes)
# fullDta <- fread("D:/LUKA/Freelance/Mediatoolkit/FULLDATA_NOTXT.csv")
# fullDtaTxt <- fread("D:/LUKA/Freelance/Mediatoolkit/FULLDATA_TXT.csv")
dt <- fread("D:/LUKA/Freelance/Mediatoolkit/MktFULLtxt.csv")
knitr::opts_chunk$set(echo = TRUE)
# fullDta <- fread("D:/LUKA/Freelance/Mediatoolkit/FULLDATA_NOTXT.csv")
# fullDtaTxt <- fread("D:/LUKA/Freelance/Mediatoolkit/FULLDATA_TXT.csv")
dt <- fread("D:/LUKA/Freelance/Mediatoolkit/MktFULLtxt.csv")
# Read In
original <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/native1.xlsx", sheetIndex = 1) %>% mutate(V1 = as.numeric(V1))
variables <- read.xlsx("C:/Users/lukas/Dropbox/Članci/Native rad/Native.xlsx", sheetIndex = 1)
variables <- variables[,-c(23,24,25)]# %>% drop_na()
original <- original %>% filter(V1 %in% variables$V1)
dta <- merge(original, variables, by = "V1", all.x = TRUE)
dta$DATE <- as.Date(dta$DATE)
stemmed <- readRDS("C:/Users/Lukas/Dropbox/Mediatoolkit/native_token_stemm.rds")
stemmed <- readRDS("C:/Users/lukas/Dropbox/Članci/Native rad/native_token_stemm.rds")
stemmed <- stemmed %>%
rename("wordp" = "word") %>%
rename("word" = "transformed_column")
# number of articles
nrow(dta)
# read in lexicons
CroSentilex_n <- read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-negatives.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE,
fileEncoding = "UTF-8")  %>%
rename(word = "V1", sentiment = "V2" ) %>%
mutate(brija = "NEG")
CroSentilex_p  <- read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-positives.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE,
fileEncoding = "UTF-8") %>%
rename(word = "V1", sentiment = "V2" ) %>%
mutate(brija = "POZ")
Crosentilex_sve <- rbind(setDT(CroSentilex_n), setDT(CroSentilex_p))
CroSentilex_Gold  <- read.delim2("C:/Users/Lukas/Dropbox/Mislav@Luka/gs-sentiment-annotations.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE) %>%
rename(word = "V1", sentiment = "V2" )
Encoding(CroSentilex_Gold$word) <- "UTF-8"
CroSentilex_Gold[1,1] <- "dati"
CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "-", "1")
CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "\\+", "2")
CroSentilex_Gold$sentiment <- as.numeric(unlist(CroSentilex_Gold$sentiment))
LilaHR  <- read_excel("C:/Users/Lukas/Dropbox/Mislav@Luka/lilaHR_clean.xlsx", sheet = "Sheet1") %>% select (-"...1")
LilaHR_long <- read_excel("C:/Users/Lukas/Dropbox/Mislav@Luka/lilaHR_clean_long.xlsx", sheet = "Sheet1") %>% select (-"...1")
# create stop words
stopwords_cro <- get_stopwords(language = "hr", source = "stopwords-iso")
# check stopwords data
#head(sample_n(stopwords_cro,100),15)
# extend stop words
my_stop_words <- tibble(
word = c(
"jedan","mjera", "može", "možete", "mogu", "kad", "sada", "treba", "ima", "osoba",
"e","prvi", "dva","dvije","drugi",
"tri","treći","pet","kod",
"ove","ova",  "ovo","bez", "kod",
"evo","oko",  "om", "ek",
"mil","tko","šest", "sedam",
"osam",   "čim", "zbog",
"prema", "dok","zato", "koji",
"im", "čak","među", "tek",
"koliko", "tko","kod","poput",
"baš", "dakle", "osim", "svih",
"svoju", "odnosno", "gdje",
"kojoj", "ovi", "toga",
"ubera", "vozača", "hrvatskoj", "usluge", "godine", "više", "taksi", "taxi", "taksija", "taksija", "kaže", "rekao", "19"," aee", "ae","bit.ly", "https", "one", "the"
),
lexicon = "lux"
)
# full set with diacritics
cro_sw_full_d <- tibble(word = c("a","ako","ali","baš","bez","bi","bih","bila","bili","bilo","bio","bismo","bit","biti","bolje","bude","čak","čega","čemu","često","četiri","čime","čini","će","ćemo","ćete","ću","da","dakle","dalje","dan","dana","dana","danas","dio","do","dobro","dok","dosta","dva","dvije","eto","evo","ga","gdje","god","godina","godine","gotovo","grada","i","iako","ići","ih","ili","im","ima","imaju","imali","imam","imao","imati","inače","ipak","isto","iz","iza","između","ja","jako","je","jedan","jedna","jednog","jednom","jednostavno","jednu","jer","joj","još","ju","ka","kad","kada","kaj","kako","kao","kaže","kod","koja","koje","kojeg","kojeg","kojem","koji","kojih","kojim","kojima","kojoj","kojom","koju","koliko","kraju","kroz","li","malo","manje","me","među","međutim","mene","meni","mi","milijuna","mislim","mjesto","mnogo","mogao","mogli","mogu","moj","mora","možda","može","možemo","možete","mu","na","način","nad","naime","nakon","nam","naravno","nas","ne","neće","nego","neka","neke","neki","nekog","nekoliko","neku","nema","nešto","netko","ni","nije","nikad","nisam","nisu","ništa","niti","no","njih","o","od","odmah","odnosno","oko","on","ona","onda","oni","onih","ono","opet","osim","ova","ovaj","ovdje","ove","ovim","ovo","ovog","ovom","ovu","pa","pak","par","po","pod","poput","posto","postoji","pred","preko","prema","pri","prije","protiv","prvi","puno","put","radi","reći","s","sa","sad","sada","sam","samo","sati","se","sebe","si","smo","ste","stoga","strane","su","svaki","sve","svi","svih","svoj","svoje","svoju","što","ta","tada","taj","tako","također","tamo","te","tek","teško","ti","tih","tijekom","time","tko","to","tog","toga","toj","toliko","tom","tome","treba","tu","u","uopće","upravo","uvijek","uz","vam","vas","već","vi","više","vrijeme","vrlo","za","zapravo","zar","zato","zbog","zna","znači"),
lexicon = "boras")
stop_corpus <- my_stop_words %>%
bind_rows(stopwords_cro)
stop_corpus <- stop_corpus %>%
bind_rows(cro_sw_full_d)
# tokenize
dta %>%
unnest_tokens(word, FULL_TEXT) -> n_token
# remove stop words, numbers, single letters
n_token %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) -> n_tokenTidy
stop=c('biti','jesam','budem','sam','jesi','budeš','si','jesmo','budemo','smo','jeste','budete','ste','jesu','budu','su','bih','bijah','bjeh','bijaše','bi','bje','bješe','bijasmo','bismo','bjesmo','bijaste','biste','bjeste','bijahu','biste','bjeste','bijahu','bi','biše','bjehu','bješe','bio','bili','budimo','budite','bila','bilo','bile','ću','ćeš','će','ćemo','ćete','želim','želiš','želi','želimo','želite','žele','moram','moraš','mora','moramo','morate','moraju','trebam','trebaš','treba','trebamo','trebate','trebaju','mogu','možeš','može','možemo','možete')
istakniSlogotvornoR <- function(niz) {
stringr::str_replace_all(niz, "(^|[^aeiou])r($|[^aeiou])", "\\1R\\2")
}
imaSamoglasnik <- function(niz) {
!is.na(stringr::str_detect(istakniSlogotvornoR(niz), "[aeiouR]"))
}
transformiraj <- function(pojavnica) {
for(i in 1:nrow(transformacije)) {
trazi <- transformacije[i, 1]
zamijeni <- transformacije[i, 2]
if (endsWith(pojavnica, trazi)) {
return(sub(paste0(trazi, "$"), zamijeni, pojavnica))
}
}
return(pojavnica)
}
korjenuj <- function(pojavnica) {
for(pravilo in pravila) {
dioba <- stringr::str_match(pojavnica, pravilo)
if (!is.na(dioba[2])) {
if (imaSamoglasnik(dioba[2]) && nchar(dioba[2]) > 1) {
return(dioba[2])
}
}
}
return(pojavnica)
}
pravila <- lapply(strsplit(trimws(readLines('C:/Users/Lukas/Dropbox/Mislav@Luka/rules.txt')), ' '), function(x) paste0('^(', x[1], ')(', x[2], ')$'))
transformacije <- as.data.frame(do.call(rbind, strsplit(trimws(readLines('C:/Users/Lukas/Dropbox/Mislav@Luka/transformations.txt')), '\t')))
write_tokens <- function(token) {
if (token %in% stop) {
return(paste0(token, '\t', token))
} else {
return(paste0(token, '\t', korjenuj(transformiraj(token))))
}
}
proba <- LilaHR %>%
mutate(
word_korijen = sapply(word, function(x) {
result <- sapply(x, write_tokens)
extracted <- sapply(strsplit(result, "\t"), `[`, 2)
return(extracted)
})
)
LilaHR <- LilaHR %>% rename("word" = "HR")
proba <- CroSentilex_Gold %>%
#  slice(1:500) %>%
mutate(
results = map(word, write_tokens),
korijen = map_chr(results, ~ str_extract(.x, "(?<=\t)[^\t]+$")),
rijec = map_chr(results, ~ str_extract(.x, "^[^\t]+(?=\t)"))
) %>%
select(-results)
setDT(LilaHR)
LilaHR[, transformed_column := sapply(strsplit(sapply(word, write_tokens), "\t"), `[`, 2)]
# Splitting data into batches
batch_size <- 1000  # Adjust this to the size you want
number_of_batches <- ceiling(nrow(LilaHR) / batch_size)
batched_data <- split(LilaHR, seq(1, nrow(LilaHR), by=batch_size))
# Applying the transformation on each batch and collecting results
result_list <- lapply(batched_data, process_batch)
# Binding batches back together
result4 <- rbindlist(result_list)
stemmed <- rbind(result, result2, result3, result4)
print(result)
View(stemmed)
stemmed <- readRDS("C:/Users/lukas/Dropbox/Članci/Native rad/native_token_stemm.rds")
View(stemmed)
LilaHR
