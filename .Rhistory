"10 000 - 20 000",
"20 000 - 50 000",
"50 000 - 100 000",
"100 000 - 200 000"
)
)
dta %>%
group_by(DOSEG.PUBLIKE) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(doseg, by = c("DOSEG.PUBLIKE" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
filter(DOSEG.PUBLIKE == 6)
dta %>%
group_by(DOSEG.PUBLIKE) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(doseg, by = c("DOSEG.PUBLIKE" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
filter(DOSEG.PUBLIKE == 6)
dta %>%
group_by(BROJ.LAJKOVA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(lajkovi, by = c("BROJ.LAJKOVA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
lajkovi <- data.frame(
number = c(1, 2, 3, 4, 5, 6, 7),
text = c(
"0 - 20",
"20 - 50",
"50 - 100",
"100 - 200",
"200 - 500",
"500 - 1000",
"1 000 - 2000"
)
)
dta %>%
group_by(BROJ.LAJKOVA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(lajkovi, by = c("BROJ.LAJKOVA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
filter(DOSEG.PUBLIKE == 6) %>%
select(URL)
dta %>%
filter(DOSEG.PUBLIKE == 6) %>%
select(URL)
dta %>%
filter(BROJ.LAJKOVA == 6) %>%
select(URL)
dta %>%
filter(BROJ.LAJKOVA == 6 & 7) %>%
select(URL)
dta %>%
group_by(BROJ.LAJKOVA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(lajkovi, by = c("BROJ.LAJKOVA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
filter(BROJ.LAJKOVA == 7 ) %>%
select(URL)
komentari <- data.frame(
number = c(1, 2, 3, 4, 5, 6, 7, 8),
text = c(
"0 - 2",
"2 - 5",
"5 - 10",
"10 - 20",
"20 - 50",
"50 - 100",
"100 - 200",
"200 - 500"
)
)
dta %>%
group_by(BROJ.KOMENTARA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(komentari, by = c("BROJ.KOMENTARA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
filter(BROJ.KOMENTARA == 7 ) %>%
select(URL)
dta %>%
filter(BROJ.KOMENTARA == 8 ) %>%
select(URL)
dta %>%
group_by(BROJ.INTERAKCIJA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(interakcije, by = c("BROJ.INTERAKCIJA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
interakcije <- data.frame(
number = c(1, 2, 3, 4, 5, 6, 7, 8),
text = c(
"0 - 20",
"20 - 50",
"50 - 100",
"100 - 200",
"200 - 500",
"500 - 1000",
"1 000 - 2000",
"2 000 - 5 000"
)
)
dta %>%
group_by(BROJ.INTERAKCIJA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(interakcije, by = c("BROJ.INTERAKCIJA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
group_by(BROJ.INTERAKCIJA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(interakcije, by = c("BROJ.INTERAKCIJA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
filter(BROJ.INTERAKCIJA == 7 ) %>%
select(URL)
dta %>%
filter(BROJ.INTERAKCIJA == 8 ) %>%
select(URL)
n_tokenTidy %>%
anti_join(CroSentilex_Gold,by="word") %>%
count(word
n_tokenTidy %>%
n_tokenTidy %>%
anti_join(CroSentilex_Gold,by="word") %>%
count(word)
# tokenize
dta %>%
unnest_tokens(word, FULL_TEXT) -> n_token
# remove stop words, numbers, single letters
n_token %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) -> n_tokenTidy
# read in lexicons
CroSentilex_n <- read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-negatives.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE,
fileEncoding = "UTF-8")  %>%
rename(word = "V1", sentiment = "V2" ) %>%
mutate(brija = "NEG")
CroSentilex_p  <- read.delim("C:/Users/Lukas/Dropbox/Mislav@Luka/crosentilex-positives.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE,
fileEncoding = "UTF-8") %>%
rename(word = "V1", sentiment = "V2" ) %>%
mutate(brija = "POZ")
Crosentilex_sve <- rbind(setDT(CroSentilex_n), setDT(CroSentilex_p))
# check lexicon data
#head(sample_n(Crosentilex_sve,1000),15)
CroSentilex_Gold  <- read.delim2("C:/Users/Lukas/Dropbox/Mislav@Luka/gs-sentiment-annotations.txt",
header = FALSE,
sep = " ",
stringsAsFactors = FALSE) %>%
rename(word = "V1", sentiment = "V2" )
Encoding(CroSentilex_Gold$word) <- "UTF-8"
CroSentilex_Gold[1,1] <- "dati"
CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "-", "1")
CroSentilex_Gold$sentiment <- str_replace(CroSentilex_Gold$sentiment , "\\+", "2")
CroSentilex_Gold$sentiment <- as.numeric(unlist(CroSentilex_Gold$sentiment))
# check lexicon data
#head(sample_n(CroSentilex_Gold,100),15)
# create stop words
stopwords_cro <- get_stopwords(language = "hr", source = "stopwords-iso")
# check stopwords data
#head(sample_n(stopwords_cro,100),15)
# extend stop words
my_stop_words <- tibble(
word = c(
"jedan","mjera", "može", "možete", "mogu", "kad", "sada", "treba", "ima", "osoba",
"e","prvi", "dva","dvije","drugi",
"tri","treći","pet","kod",
"ove","ova",  "ovo","bez", "kod",
"evo","oko",  "om", "ek",
"mil","tko","šest", "sedam",
"osam",   "čim", "zbog",
"prema", "dok","zato", "koji",
"im", "čak","među", "tek",
"koliko", "tko","kod","poput",
"baš", "dakle", "osim", "svih",
"svoju", "odnosno", "gdje",
"kojoj", "ovi", "toga",
"ubera", "vozača", "hrvatskoj", "usluge", "godine", "više", "taksi", "taxi", "taksija", "taksija", "kaže", "rekao", "19"," aee", "ae","bit.ly", "https", "one", "the"
),
lexicon = "lux"
)
stop_corpus <- my_stop_words %>%
bind_rows(stopwords_cro)
# check stopwords data
#head(sample_n(stop_corpus,100),15)
# dim before tokenize
#dim(dta)
# tokenize
dta %>%
unnest_tokens(word, FULL_TEXT) -> n_token
# dim after tokenize
#dim(n_token)
# check
# fb_token %>%
#   select(FROM, word, MENTION_SNIPPET ) %>%
#     sample_n(.,100)
# remove stop words, numbers, single letters
n_token %>%
anti_join(stop_corpus, by = "word") %>%
mutate(word = gsub("\\d+", NA, word)) %>%
mutate(word = gsub("^[a-zA-Z]$", NA, word)) -> n_tokenTidy
# remove NA
n_tokenTidy %>%
filter(!is.na(word)) -> n_tokenTidy
# check
# fb_tokenTidy  %>%
#   select(FROM, word, MENTION_SNIPPET ) %>%
#   sample_n(.,100)
# dim after clean
#dim(n_tokenTidy)
n_tokenTidy %>%
anti_join(CroSentilex_Gold,by="word")
n_tokenTidy %>%
anti_join(CroSentilex_Gold,by="word") %>%
count(word)
n_tokenTidy %>%
anti_join(CroSentilex_Gold,by="word") %>%
count(word) %>%
arrange(desc(n))
n_tokenTidy %>%
anti_join(CroSentilex_Gold,by="word") %>%
count(word) %>%
arrange(desc(n)) %>%
top_n(200)
n_tokenTidy %>%
filter(FROM == "telegram.hr") %>%
inner_join(CroSentilex_Gold,by="word") %>%
count(word, sentiment) %>%
top_n(200) %>%
mutate(sentiment = case_when(sentiment == 0 ~ "+/-",
sentiment == 1 ~ "-",
sentiment == 2 ~ "+")) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("firebrick3", "deepskyblue3","darkslategray"),
max.words = 120)
n_tokenTidy %>%
filter(FROM == "slobodnadalmacija.hr") %>%
inner_join(CroSentilex_Gold,by="word") %>%
count(word, sentiment) %>%
top_n(200) %>%
mutate(sentiment = case_when(sentiment == 0 ~ "+/-",
sentiment == 1 ~ "-",
sentiment == 2 ~ "+")) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("firebrick3", "deepskyblue3","darkslategray"),
max.words = 120)
bigrams_united %>%
count(bigram, sort = T) %>%
filter(n>10) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
fb_bigram <- dta %>%
unnest_tokens(bigram, FULL_TEXT, token = "ngrams", n = 2)
#fb_bigram %>% head(10)
# fb_bigram %>%
#   count(bigram, sort = T) %>%
#   head(25)
fb_bigram_sep <- fb_bigram %>%
separate(bigram, c("word1","word2"), sep = " ")
fb_bigram_tidy <- fb_bigram_sep %>%
filter(!word1 %in% stop_corpus$word) %>%
filter(!word2 %in% stop_corpus$word) %>%
mutate(word1 = gsub("\\d+", NA, word1)) %>%
mutate(word2 = gsub("\\d+", NA, word2)) %>%
mutate(word1 = gsub("^[a-zA-Z]$", NA, word1)) %>%
mutate(word2 = gsub("^[a-zA-Z]$", NA, word2))
fb_bigram_tidy_bigram_counts <- fb_bigram_tidy %>%
count(word1, word2, sort = TRUE)
bigrams_united <- fb_bigram_tidy %>%
unite(bigram, word1, word2, sep = " ") %>%
filter(., !grepl("NA",bigram))
#bigrams_united
bigrams_united %>%
count(FROM,bigram,sort = T) -> topicBigram
bigrams_united %>%
count(bigram, sort = T) %>%
filter(n>10) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
# Najvažniji bigrami po domenama
bigram_tf_idf <- bigrams_united %>%
#  filter (!is.na(bigram)) %>%
count(FROM, bigram) %>%
bind_tf_idf(bigram, FROM, n) %>%
arrange(desc(tf_idf))
# Najvažniji bigrami po domenama
bigram_tf_idf <- bigrams_united %>%
#  filter (!is.na(bigram)) %>%
count(FROM, bigram) %>%
bind_tf_idf(bigram, FROM, n) %>%
arrange(desc(tf_idf))
bigram_tf_idf %>%
arrange(desc(tf_idf)) %>%
filter(tf_idf > 0.09) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
#  group_by(FROM) %>%
#  top_n(20) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
#  facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
bigram_tf_idf %>%
arrange(desc(tf_idf)) %>%
filter(tf_idf > 0.09)
bigram_tf_idf %>%
filter(FROM %in% c("vecenji.hr", "jutarnji.hr", "24sata.hr", "telegram.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(10)
bigram_tf_idf %>%
filter(FROM %in% c("vecenji.hr", "jutarnji.hr", "24sata.hr", "telegram.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
bigram_tf_idf %>%
filter(FROM %in% c("vecenji.hr", "jutarnji.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(15) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
bigram_tf_idf %>%
filter(FROM %in% c("jutarnji.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
bigram_tf_idf %>%
filter(FROM %in% c("vecenji.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
bigram_tf_idf %>%
filter(FROM %in% c("vecenji.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
bigram_tf_idf %>%
filter(FROM %in% c("telegram.hr")) %>%
arrange(desc(tf_idf)) %>%
mutate(bigram = factor(bigram, levels = rev(unique(bigram)))) %>%
group_by(FROM) %>%
top_n(5) %>%
ungroup() %>%
ggplot(aes(bigram, tf_idf, fill = FROM)) +
geom_col(show.legend = FALSE) +
labs(x = NULL, y = "tf-idf") +
facet_wrap(~FROM, ncol = 2, scales = "free") +
coord_flip() +
theme_economist()
n_tokenTidy %>%
#  filter(datum > "2020-02-20") %>%
group_by(word) %>%
filter(n() > 20) %>%
filter(!is.na(word)) %>%
pairwise_cor(word,DATE, sort = T) -> corsWords
#corsWords %>%
#  filter(item1 == "oporavak")
corsWords %>%
filter(item1 %in% c("bolest", "rizik", "strah")) %>%
group_by(item1) %>%
top_n(10) %>%
ungroup() %>%
mutate(item2 = reorder(item2, correlation)) %>%
ggplot(aes(item2, correlation)) +
geom_bar(stat = "identity") +
facet_wrap(~ item1, scales = "free") +
coord_flip() +
theme_economist()
industry_list
industry_list %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
ggplot(data = dta, aes(x = PREMIUM.ČLANAK)) +
ggplot(data = dta, aes(x = PREMIUM.ČLANAK)) +
dta
ggplot(data = dta, aes(x = PREMIUM.ČLANAK)) +
l
ggplot(data = dta, aes(x = HRV.IL.STRANI.BREND)) +
geom_histogram(binwidth = 0.5, fill = "blue", alpha = 0.7) +
ggtitle("Porijeklo") +
xlab("Industrija") +
ylab("Frequency") +
scale_x_continuous(breaks = seq(from = min(dta$HRV.IL.STRANI.BREND), to =  max(dta$HRV.IL.STRANI.BREND), by = 1))
ggplot(data = dta, aes(x = PREMIUM.ČLANAK )) +
ggplot(data = dta, aes(x = `PREMIUM.ČLANAK` )) +
dta$PREMIUM.ČLANAK
dta %>%
group_by(NAZIV.BRENDA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
ggplot(data = dta, aes(x = dta$PREMIUM.ČLANAK )) +
ggplot(data = dta, aes(x = dta$PREMIUM.ČLANAK)) +
autorstvo %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
group_by(AUTORSTVO) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(autorstvo, by = c("AUTORSTVO" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
group_by(AUTORSTVO) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(autorstvo, by = c("AUTORSTVO" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
autorstvo %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
dta %>%
group_by(AUTORSTVO) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(autorstvo, by = c("AUTORSTVO" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
rubrika <- data.frame(
number = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18),
text = c(
"Native",
"Partneri",
"Promo",
"Vijesti",
"Vanjska politika",
"Unutarnja politika",
"Magazin / mozaik / zabava",
"Financije / novac / biznis / poduzetnički savjetnik",
"Dom i dizajn",
"Lifestyle / estrada / celebrity / scena / showbiz",
"Auto-moto",
"Sport",
"Tehnologija / znanost (tech-sci)",
"Putovanja",
"Prehrana / gastro / dobra hrana",
"Lokalna rubrika (Zagreb, Dalmacija)",
"Zdravlje, zdrav život",
"Openspace (Telegram.hr)"
)
)
dta %>%
group_by(RUBRIKA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(rubrika, by = c("RUBRIKA" = "number")) %>%
datatable(., options = list(scrollX = TRUE, scrollY = "500px"))
rubr <- dta %>%
group_by(RUBRIKA) %>%
summarise(BrojObjava = n()) %>%
arrange(desc(BrojObjava)) %>%
left_join(rubrika, by = c("RUBRIKA" = "number"))
rubr
ggplot(data = dta, aes(x = RUBRIKA)) +
geom_histogram(binwidth = 1, fill = "blue", alpha = 0.7) +
ggtitle("Rubrika") +
xlab("Rubrika") +
ylab("Frequency") +
scale_x_continuous(breaks = seq(from = min(dta$RUBRIKA), to =  max(dta$RUBRIKA), by = 1))
